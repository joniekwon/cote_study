# N*M 크기의 얼음 틀이 있다. 구멍이 뚫려있는 부분은 0, 칸막이가 존재하는 부분은 1로 표시
# 뚫려 있는 부분끼리 상,하,좌,우로 붙어있는 경우 서로 연결되어 있는 것으로 간주
# 얼음 틀 모양이 주어졌을 때 생성되는 총 아이스크림의 개수를 구하라.
def dfs(x, y):
    if x <= -1 or x>= n or y <= -1 or y>= m:
        return False
    # 구멍이 뚫려있으면
    if graph[x][y]==0:
        # 현재 위치 방문 처리
        graph[x][y]=1
        # 연결된 상하좌우도 방문 처리
        dfs(x - 1, y)
        dfs(x + 1, y)
        dfs(x, y - 1)
        dfs(x, y + 1)
        return True
    return False
# 모든 노드(위치)에 대하여 음료수 채우기
result = 0
n, m = 15, 14
graph = ['00000111100000',
         '11111101111110',
         '11011101101110',
         '11011101100000',
         '11011111111111',
         '11011111111100',
         '11000000011111',
         '01111111111111',
         '00000000011111',
         '01111111111000',
         '00011111111000',
         '00000001111000',
         '11111111110011',
         '11100011111111',
         '11100011111111'
         ]
graph = [list(map(int, x)) for x in graph]

for i in range(n):
    for j in range(m):
        # 현재 위치에서 DFS 수행
        if dfs(i, j) == True:
            result += 1

print(result) # 정답 출력